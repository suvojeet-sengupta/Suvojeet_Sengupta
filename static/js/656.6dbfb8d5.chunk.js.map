{"version":3,"file":"static/js/656.6dbfb8d5.chunk.js","mappings":"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","sources":["components/GenerativePlaceholder.js","components/BlogCard.js","components/Blog.js","contentful.js","hooks/useBlogPosts.js"],"sourcesContent":["import React from 'react';\n\n/**\n * A component that generates a placeholder image with a gradient based on the post title.\n * This is used when a blog post does not have a featured image.\n * @param {object} props - The component props.\n * @param {string} props.title - The title of the blog post, used to generate the gradient.\n */\nconst GenerativePlaceholder = ({ title }) => {\n  const generateGradient = (str) => {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    const h = hash % 360;\n    const s = 60 + (hash % 10);\n    const l1 = 30 + (hash % 10);\n    const l2 = 40 + (hash % 10);\n\n    return `linear-gradient(135deg, hsl(${h}, ${s}%, ${l1}%), hsl(${h + 40}, ${s}%, ${l2}%))`;\n  };\n\n  const gradient = generateGradient(title);\n\n  return (\n    <div\n      className=\"w-full h-56 flex items-center justify-center\"\n      style={{ background: gradient }}\n    >\n      <h3 className=\"text-white text-2xl font-bold text-center p-4\">{title}</h3>\n    </div>\n  );\n};\n\nexport default GenerativePlaceholder;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport GenerativePlaceholder from './GenerativePlaceholder';\n\n/**\n * A card component to display a blog post summary.\n * @param {object} props - The component props.\n * @param {object} props.post - The blog post object from Contentful.\n * @param {string} props.post.fields.title - The title of the blog post.\n * @param {string} props.post.fields.excerpt - A short summary of the blog post.\n * @param {string} props.post.fields.slug - The URL slug for the blog post.\n * @param {object} props.post.fields.featuredImage - The featured image for the blog post.\n * @param {string[]} props.post.fields.tags - An array of tags for the blog post.\n * @param {string} props.post.fields.publishedAt - The publication date of the blog post.\n */\nconst BlogCard = ({ post }) => {\n  const { title, excerpt, slug, featuredImage, tags, publishedAt } = post.fields;\n\n  const itemVariants = {\n    hidden: { y: 20, opacity: 0 },\n    visible: { y: 0, opacity: 1, transition: { duration: 0.5, ease: 'easeOut' } },\n  };\n\n  return (\n    <motion.div\n      className=\"bg-dark-2 rounded-lg shadow-lg overflow-hidden transform hover:-translate-y-2 transition-transform duration-300 shadow-primary/10\"\n      variants={itemVariants}\n    >\n      <Link to={`/blog/${slug}`}>\n        {featuredImage ? (\n          <img\n            className=\"w-full h-56 object-cover object-center\"\n            src={featuredImage.fields.file.url}\n            alt={title}\n          />\n        ) : (\n          <GenerativePlaceholder title={title} />\n        )}\n      </Link>\n      <div className=\"p-6\">\n        <div className=\"flex items-center mb-2\">\n          {tags && tags.map(tag => (\n            <span key={tag} className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-primary bg-primary/10 mr-2\">{tag}</span>\n          ))}\n        </div>\n        <h3 className=\"text-xl font-bold text-white mb-2 font-montserrat\">{title}</h3>\n        <p className=\"text-grey-2 leading-relaxed mb-4\">{excerpt}</p>\n        <div className=\"flex items-center justify-between\">\n          <span className=\"text-gray-400 text-sm\">{new Date(publishedAt).toLocaleDateString()}</span>\n          <Link to={`/blog/${slug}`} className=\"inline-block px-4 py-2 font-bold text-dark bg-primary rounded-lg hover:bg-primary-dark transition-all duration-300 transform hover:scale-105 shadow-primary\">\n            Read More\n          </Link>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default BlogCard;\n","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport BlogCard from './BlogCard';\nimport useBlogPosts from '../hooks/useBlogPosts';\n\n/**\n * The Blog page component.\n * This component fetches and displays blog posts from Contentful.\n * It includes:\n * - A search bar to filter posts.\n * - A featured post section.\n * - A grid of other blog posts.\n */\nconst Blog = () => {\n  const { posts } = useBlogPosts();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredPosts, setFilteredPosts] = useState([]);\n\n  useEffect(() => {\n    document.title = \"Blog | Suvojeet Sengupta\";\n    let metaDesc = document.querySelector('meta[name=\"description\"]');\n    if (!metaDesc) {\n      metaDesc = document.createElement('meta');\n      metaDesc.name = 'description';\n      document.head.appendChild(metaDesc);\n    }\n    metaDesc.content = \"Read the latest blog posts and updates from Suvojeet Sengupta. Get a behind-the-scenes look at his musical journey.\";\n  }, []);\n\n  useEffect(() => {\n    const filtered = posts.filter(post =>\n      post.fields.title.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n    setFilteredPosts(filtered);\n  }, [searchQuery, posts]);\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: { staggerChildren: 0.1 },\n    },\n  };\n\n  const featuredPost = filteredPosts.length > 0 ? filteredPosts[0] : null;\n  const otherPosts = filteredPosts.length > 1 ? filteredPosts.slice(1) : [];\n\n  return (\n    <div className=\"bg-dark text-white pt-20\">\n      <motion.header\n        className=\"py-20 text-center\"\n        initial={{ opacity: 0, y: -50 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <h1 className=\"text-4xl font-bold text-center mb-12\">Blog</h1>\n        <p className=\"mt-4 text-base md:text-lg text-grey px-4\">Behind-the-scenes stories, upcoming projects, and my thoughts on music.</p>\n        <div className=\"mt-8 w-full max-w-md mx-auto\">\n          <div className=\"relative\">\n            <span className=\"absolute inset-y-0 left-0 flex items-center pl-3\">\n              <svg\n                className=\"w-5 h-5 text-gray-500\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                ></path>\n              </svg>\n            </span>\n            <input\n              type=\"text\"\n              placeholder=\"Search for articles, topics, or keywords...\"\n              className=\"w-full pl-10 pr-4 py-3 rounded-full bg-white bg-opacity-10 text-white placeholder-gray-400 border border-transparent focus:outline-none focus:ring-2 focus:ring-primary focus:bg-opacity-20 backdrop-blur-sm transition-all duration-300 ease-in-out shadow-lg\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n            />\n          </div>\n        </div>\n      </motion.header>\n\n      <main className=\"w-full max-w-7xl mx-auto p-8\">\n        {featuredPost && (\n          <motion.div\n            className=\"mb-16\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5 }}\n          >\n            <h2 className=\"text-3xl font-bold text-primary mb-8 text-center\">Featured Post</h2>\n            <BlogCard post={featuredPost} />\n          </motion.div>\n        )}\n\n        <motion.div\n          className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\"\n          variants={containerVariants}\n          initial=\"hidden\"\n          animate=\"visible\"\n        >\n          {otherPosts.map((post) => (\n            <BlogCard key={post.sys.id} post={post} />\n          ))}\n        </motion.div>\n      </main>\n    </div>\n  );\n};\n\nexport default Blog;\n","import { createClient } from 'contentful';\n\nconst client = createClient({\n  space: process.env.REACT_APP_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.REACT_APP_CONTENTFUL_ACCESS_TOKEN,\n});\n\nexport default client;\n","import { useState, useEffect } from 'react';\nimport client from '../contentful';\n\nconst useBlogPosts = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await client.getEntries({ content_type: 'blogPost' });\n        setPosts(response.items);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  return { posts, loading, error };\n};\n\nexport default useBlogPosts;"],"names":["_ref","title","gradient","str","hash","i","length","charCodeAt","h","s","l1","l2","concat","generateGradient","_jsx","className","style","background","children","post","excerpt","slug","featuredImage","tags","publishedAt","fields","_jsxs","motion","div","variants","hidden","y","opacity","visible","transition","duration","ease","Link","to","src","file","url","alt","GenerativePlaceholder","map","tag","Date","toLocaleDateString","Blog","posts","useBlogPosts","searchQuery","setSearchQuery","useState","filteredPosts","setFilteredPosts","useEffect","document","metaDesc","querySelector","createElement","name","head","appendChild","content","filtered","filter","toLowerCase","includes","featuredPost","otherPosts","slice","header","initial","animate","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","type","placeholder","value","onChange","e","target","BlogCard","staggerChildren","sys","id","createClient","space","process","accessToken","setPosts","loading","setLoading","error","setError","async","response","client","getEntries","content_type","items","err","fetchPosts"],"sourceRoot":""}