{"version":3,"file":"static/js/592.f48e4b2c.chunk.js","mappings":"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","sources":["components/BlogPost.js","contentful.js","hooks/useBlogPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport useBlogPosts from '../hooks/useBlogPosts';\n\n/**\n * The BlogPost page component.\n * This component fetches and displays a single blog post from Contentful based on the URL slug.\n * It includes:\n * - Dynamic update of the page title and meta tags for SEO.\n * - Rendering of the blog post content from Contentful's rich text format.\n * - A \"Share\" button to share the post using the Web Share API or copy the URL to the clipboard.\n */\nconst BlogPost = () => {\n  const { slug } = useParams();\n  const { posts } = useBlogPosts();\n  const [post, setPost] = useState(null);\n  const [showCopied, setShowCopied] = useState(false);\n\n  useEffect(() => {\n    if (posts.length > 0) {\n      const currentPost = posts.find((p) => p.fields.slug === slug);\n      setPost(currentPost);\n\n      if (currentPost) {\n        document.title = `${currentPost.fields.title} | Suvojeet Sengupta`;\n\n        const updateMetaTag = (property, content) => {\n          let element = document.querySelector(`meta[property=\"${property}\"]`);\n          if (!element) {\n            element = document.createElement('meta');\n            element.setAttribute('property', property);\n            document.head.appendChild(element);\n          }\n          element.setAttribute('content', content);\n        };\n\n        updateMetaTag('og:title', currentPost.fields.title);\n        updateMetaTag('og:description', currentPost.fields.excerpt);\n        updateMetaTag('og:url', window.location.href);\n        if (currentPost.fields.featuredImage) {\n          updateMetaTag('og:image', currentPost.fields.featuredImage.fields.file.url);\n        } else {\n          updateMetaTag('og:image', '%PUBLIC_URL%/suvojeet.jpg');\n        }\n\n        let metaDesc = document.querySelector('meta[name=\"description\"]');\n        if (!metaDesc) {\n          metaDesc = document.createElement('meta');\n          metaDesc.name = 'description';\n          document.head.appendChild(metaDesc);\n        }\n        metaDesc.content = currentPost.fields.excerpt;\n      }\n    }\n  }, [slug, posts]);\n\n  const handleShare = () => {\n    const url = window.location.href;\n    if (navigator.share) {\n      navigator.share({\n        title: post.fields.title,\n        text: post.fields.excerpt,\n        url: url,\n      })\n        .then(() => console.log('Successful share'))\n        .catch((error) => console.log('Error sharing', error));\n    } else {\n      navigator.clipboard.writeText(url);\n      setShowCopied(true);\n      setTimeout(() => {\n        setShowCopied(false);\n      }, 2000);\n    }\n  };\n\n  if (!post) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"bg-dark text-white pt-20\">\n      <motion.header\n        className=\"py-20 text-center\"\n        initial={{ opacity: 0, y: -50 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <h1 className=\"text-4xl font-bold text-center mb-4\">{post.fields.title}</h1>\n        <p className=\"text-xs text-gray-400 mt-2\">Published on: {new Date(post.fields.publishedAt).toLocaleDateString()} by {post.fields.author}</p>\n      </motion.header>\n\n      <main className=\"w-full max-w-4xl mx-auto p-8\">\n        <motion.div\n          className=\"bg-dark rounded-lg shadow-xl p-8 md:p-12 mb-16 shadow-primary/10\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n        >\n          <div className=\"prose prose-invert max-w-none\">\n            {documentToReactComponents(post.fields.content, {\n              renderNode: {\n                [BLOCKS.PARAGRAPH]: (node, children) => <p className=\"mb-4\">{children}</p>,\n              },\n            })}\n          </div>\n          <div className=\"mt-8 flex justify-end\">\n            <button\n              onClick={handleShare}\n              className=\"flex items-center px-4 py-2 font-bold text-dark bg-primary rounded-lg hover:bg-primary-dark transition-all duration-300 transform hover:scale-105 shadow-primary\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path d=\"M15 8a3 3 0 10-2.977-2.63l-4.94 2.47a3 3 0 100 4.319l4.94 2.47a3 3 0 10.895-1.789l-4.94-2.47a3.027 3.027 0 000-.74l4.94-2.47C13.456 7.68 14.19 8 15 8z\" />\n              </svg>\n              Share\n            </button>\n          </div>\n        </motion.div>\n      </main>\n      {showCopied && (\n        <div className=\"fixed bottom-10 right-10 bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg\">\n          Copied to clipboard!\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BlogPost;\n","import { createClient } from 'contentful';\n\nconst client = createClient({\n  space: process.env.REACT_APP_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.REACT_APP_CONTENTFUL_ACCESS_TOKEN,\n});\n\nexport default client;\n","import { useState, useEffect } from 'react';\nimport client from '../contentful';\n\nconst useBlogPosts = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await client.getEntries({ content_type: 'blogPost' });\n        setPosts(response.items);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  return { posts, loading, error };\n};\n\nexport default useBlogPosts;"],"names":["BlogPost","slug","useParams","posts","useBlogPosts","post","setPost","useState","showCopied","setShowCopied","useEffect","length","currentPost","find","p","fields","document","title","concat","updateMetaTag","property","content","element","querySelector","createElement","setAttribute","head","appendChild","excerpt","window","location","href","featuredImage","file","url","metaDesc","name","_jsxs","className","children","motion","header","initial","opacity","y","animate","transition","duration","_jsx","Date","publishedAt","toLocaleDateString","author","div","documentToReactComponents","renderNode","BLOCKS","PARAGRAPH","node","onClick","handleShare","navigator","share","text","then","console","log","catch","error","clipboard","writeText","setTimeout","xmlns","viewBox","fill","d","createClient","space","process","accessToken","setPosts","loading","setLoading","setError","async","response","client","getEntries","content_type","items","err","fetchPosts"],"sourceRoot":""}